#!/bin/bash

# Env.
WWWROOT="/var/www/html"
MYSQL_HOST=${MYSQL_HOST:-"localhost"}
MYSQL_ID=${MYSQL_ID:-"root"}
MYSQL_PW=${MYSQL_PW:-"password!@#$"}
MYSQL_DB=${MYSQL_DB:-"testdb"}

# Installation
yum -y install httpd php mysql php-mysql

# Turn off Firewall
service iptables save
service iptables stop
chkconfig iptables off

# Service Starting
service httpd start

# init.d registration
chkconfig httpd on

# File Creation
rm -f ${WWWROOT}/index.html
cat << EOF > ${WWWROOT}/phpinfo.php
<?php
    print_r(phpinfo());
?>
EOF

cat << EOF > ${WWWROOT}/dbtest.php
<pre>
<?php
  \$row_count = 1000;
  //\$link = new mysqli("localhost", "root", "password", "database", "port");
  \$link = new mysqli("${MYSQL_HOST}", "${MYSQL_ID}", "${MYSQL_PW}", "${MYSQL_DB}");

  \$result = \$link->query('DROP TABLE IF EXISTS \`mysqlnd_test\`;');
  if (\$result) {
    \$result = \$link->query('
        CREATE TABLE \`mysqlnd_test\` (
          \`id\` int(10) unsigned NOT NULL AUTO_INCREMENT,
          \`val\` varchar(255) DEFAULT NULL,
          PRIMARY KEY (\`id\`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
    ');
  }

  if (!\$result) {
    echo 'Failed create table. Exit.' . PHP_EOL; die();
  }

  \$insert = 'INSERT INTO \`mysqlnd_test\` (\`id\`, \`val\`) VALUES ';
  for (\$i = 1; \$i <= \$row_count; \$i++) {
    \$query = \$insert . '( "", "test' . \$i . '" );';
    \$link->query(\$query);
  }
  \$link->commit();

  echo 'Start memory usage: ' . memory_get_usage() . PHP_EOL;
  \$result = \$link->query('SELECT * FROM mysqlnd_test LIMIT 10000;');
  echo 'Stop memory usage: ' . memory_get_usage() . PHP_EOL;
  echo 'If you are using mysqlnd, you can see big difference between start and stop memory usage values.' . PHP_EOL;
  echo 'This is because mysqlnd was build as PHP extension and all work with db data is under your control' . PHP_EOL;
  echo PHP_EOL;
  echo 'So if you are using mysqlnd, this script must exceed memory limit(1M) and fail right now...' . PHP_EOL;
  \$result = \$link->query('SELECT * FROM mysqlnd_test LIMIT 100000;');
?>
</pre>
EOF
